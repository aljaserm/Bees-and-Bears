name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
        working-directory: backend
      - name: Apply migrations
        run: python manage.py migrate
        working-directory: backend
      - name: Run backend tests
        run: python manage.py test
        working-directory: backend

  frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
        working-directory: frontend
      - name: Run frontend tests
        run: npm test
        working-directory: frontend

  docker-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest -f deploy/Dockerfile.backend .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest -f deploy/Dockerfile.frontend .
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Build and push database image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/database:latest -f deploy/Dockerfile.database .
          docker push ${{ secrets.DOCKER_USERNAME }}/database:latest

      - name: Docker Compose up
        run: |
          docker-compose -f deploy/docker-compose.yml up --build -d
